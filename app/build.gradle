plugins{
    id 'com.android.application'
    id 'com.github.triplet.play' version '2.0.0'
    id 'kotlin-android-extensions'
    id 'kotlin-android'
    id "kotlin-kapt"
}
play {
    track = 'internal' // or alpha or beta...
    serviceAccountCredentials = file(System.getenv("PRIVATE_KEY") ?: "private_key.json")
    defaultToAppBundles = true // Use App Bundle instead of APK
    resolutionStrategy = "ignore" //If the deployment fails due to an API error, don't fail the CI Build
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "kz.dkgroup.lingua"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    signingConfigs{
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "dkgroup.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    implementation "ru.terrakok.cicerone:cicerone:$rootProject.cicerone"
    compile project(path: ':auth_api')
    compile project(path: ':auth_firebase_impl')

}
repositories {
    mavenCentral()
}
